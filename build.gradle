plugins {
  id 'java'
  id 'war'
}

group 'org.zerock'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')


  // JDBC driver for MariaDB and MySQL
  implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.2.0'

  // Java를 더욱 멋지게 만드세요: 자동 리소스 관리, getter, setter, equals, hashCode 및 toString 등의 자동 생성 등!
  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

  implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

  // 하나의 객체 모델(VO)이 다른 객체 모델(DTO)에 매핑되는 방식(반대도 성립)을 자동으로 결정하여 객체 매핑을 쉽게 만드는 것
  // DTO -> VO, VO -> DTO 변환
  // 모델 매퍼는 getter/setter 등을 이용해 객체의 정보를 다른 객체로 복사하는 기능을 제공, 모델 매퍼 설정은 MapperUtil
  implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

  
  // 로깅 라이브러리
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'


  // 테스트할 때나 어노테이션 방식의 롬복 관련 어노테이션이 다 등록되도록
  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: "1.18.22"
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "1.18.22"



  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  implementation group: 'jstl', name: 'jstl', version: '1.2'



}

test {
useJUnitPlatform()}